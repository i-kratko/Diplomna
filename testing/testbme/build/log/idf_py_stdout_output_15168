[1/10] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D C:\Users\Niki\Desktop\sensorlelel\testbme\build\bootloader\esp-idf\esptool_py && C:\espressif2\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe C:/espressif2/Espressif/frameworks/esp-idf-v5.1.2/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 C:/Users/Niki/Desktop/sensorlelel/testbme/build/bootloader/bootloader.bin"
Bootloader binary size 0x5350 bytes. 0x2cb0 bytes (35%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/testbme.c.obj
In file included from C:/Users/Niki/Desktop/sensorlelel/testbme/main/testbme.c:7:
C:/espressif2/Espressif/frameworks/esp-idf-v5.1.2/components/spi_flash/include/esp_spi_flash.h:6:2: warning: #warning esp_spi_flash.h is deprecated, please use spi_flash_mmap.h instead [-Wcpp]
    6 | #warning esp_spi_flash.h is deprecated, please use spi_flash_mmap.h instead
      |  ^~~~~~~
[3/8] Linking C static library esp-idf\main\libmain.a
[4/8] Generating ld/sections.ld
[5/8] Building C object CMakeFiles/testbme.elf.dir/project_elf_src_esp32c6.c.obj
[6/8] Linking CXX executable testbme.elf
[7/8] Generating binary image from built executable
esptool.py v4.7.dev3
Creating esp32c6 image...
Merged 2 ELF sections
Successfully created esp32c6 image.
Generated C:/Users/Niki/Desktop/sensorlelel/testbme/build/testbme.bin
[8/8] cmd.exe /C "cd /D C:\Users\Niki\Desktop\sensorlelel\testbme\build\esp-idf\esptool_py && C:\espressif2\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe C:/espressif2/Espressif/frameworks/esp-idf-v5.1.2/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Users/Niki/Desktop/sensorlelel/testbme/build/partition_table/partition-table.bin C:/Users/Niki/Desktop/sensorlelel/testbme/build/testbme.bin"
testbme.bin binary size 0x2b620 bytes. Smallest app partition is 0x100000 bytes. 0xd49e0 bytes (83%) free.
